/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_lpuart.h"
#include "fsl_clock.h"
#include "fsl_adc.h"
#include "ff.h"
#include "diskio.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals functional group */
/* NVIC interrupt vector ID (number). */
#define INT_0_IRQN LPUART1_IRQn
/* NVIC interrupt vector priority. */
#define INT_0_IRQ_PRIORITY 0
/* NVIC interrupt handler identifier. */
#define INT_0_IRQHANDLER LPUART1_IRQHandler
/* NVIC interrupt vector ID (number). */
#define INT_1_IRQN GPIO3_Combined_0_15_IRQn
/* NVIC interrupt vector priority. */
#define INT_1_IRQ_PRIORITY 6
/* NVIC interrupt handler identifier. */
#define BOARD_SDMMC_SD_CD_PORT_IRQ_HANDLER GPIO3_Combined_0_15_IRQHandler
/* Definition of peripheral ID */
#define LPUART1_PERIPHERAL LPUART1
/* Definition of the clock source frequency */
#define LPUART1_CLOCK_SOURCE 80000000UL
/* BOARD_InitPeripherals defines for ADC1 */
/* Definition of peripheral ID */
#define ADC1_PERIPHERAL ADC1
/* Definition of special channel interconnected with ADC_ETC which takes real channel to be measured from ADC_ETC. */
#define ADC1_CHANNEL_DRIVEN_BY_ADC_ETC 16U
/* ADC1 interrupt vector ID (number). */
#define ADC1_IRQN ADC1_IRQn
/* ADC1 interrupt vector priority. */
#define ADC1_IRQ_PRIORITY 0
/* ADC1 interrupt handler identifier. */
#define ADC1_IRQHANDLER ADC1_IRQHandler
/* Channel 0 (IN.4) conversion control group. */
#define ADC1_CH0_CONTROL_GROUP 0U

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const lpuart_config_t LPUART1_config;
extern const adc_config_t ADC1_config;
extern const adc_channel_config_t ADC1_channels_config[1];
/* FATFS System object */
extern FATFS FATFS_System_0;

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
